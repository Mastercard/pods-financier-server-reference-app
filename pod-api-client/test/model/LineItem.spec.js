/**
 * Pay On Demand for Digital Inclusion
 * ## Usage Notes - In the endpoints, you will see parameter examples in {{parameter}} format. You need to replace that with the correct value. This is usually used for identifier (ID). For example, on GET /contracts, you need to replace \"financier_id\" parameter with actual financier ID. You can get this either from querying using GET /financiers or creating a new financier using POST /financiers. This also applies for properties inside request body.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: PayonDemand_DigitalInclusion@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.0
 *
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PodApiClient);
  }
})(this, function (expect, PodApiClient) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new PodApiClient.LineItem();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') object[setter](value);
    else object[property] = value;
  };

  describe('LineItem', function () {
    it('should create an instance of LineItem', function () {
      // uncomment below and update the code to test LineItem
      var instance = new PodApiClient.LineItem();
      expect(instance).to.be.a(PodApiClient.LineItem);
    });

    it('should have the property amount (base name: "amount")', function () {
      // uncomment below and update the code to test the property amount
      var instance = new PodApiClient.LineItem();
      expect(instance).to.have.property('amount');
    });

    it('should have the property lineItemDescription (base name: "lineItemDescription")', function () {
      // uncomment below and update the code to test the property lineItemDescription
      var instance = new PodApiClient.LineItem();
      expect(instance).to.have.property('lineItemDescription');
    });

    it('should have the property lineItemType (base name: "lineItemType")', function () {
      // uncomment below and update the code to test the property lineItemType
      var instance = new PodApiClient.LineItem();
      expect(instance).to.have.property('lineItemType');
    });

    it('should have the property flag (base name: "flag")', function () {
      // uncomment below and update the code to test the property flag
      var instance = new PodApiClient.LineItem();
      expect(instance).to.have.property('flag');
    });

    it('should copy from constructor argument', function () {
      const instance = new PodApiClient.LineItem(
        '721',
        'some line item',
        'INSTALMENT',
        '4'
      );
      expect(instance).to.have.property('amount', '721');
      expect(instance).to.have.property(
        'lineItemDescription',
        'some line item'
      );
      expect(instance).to.have.property('lineItemType', 'INSTALMENT');
      expect(instance).to.have.property('flag', '4');
    });

    it('should copy to provided object even for empty data', function () {
      const instance = PodApiClient.LineItem.constructFromObject({});
      expect(instance).to.have.property('amount');
      expect(instance).to.have.property('lineItemDescription');
      expect(instance).to.have.property('lineItemType');
      expect(instance).to.have.property('flag');
    });

    it('should copy to provided object', function () {
      const instance = {};
      PodApiClient.LineItem.constructFromObject(
        {
          amount: '721',
          lineItemDescription: 'some line item',
          lineItemType: 'INSTALMENT',
          flag: '4',
        },
        instance
      );
      expect(instance).to.have.property('amount', '721');
      expect(instance).to.have.property(
        'lineItemDescription',
        'some line item'
      );
      expect(instance).to.have.property('lineItemType', 'INSTALMENT');
      expect(instance).to.have.property('flag', 4);
    });
  });
});
