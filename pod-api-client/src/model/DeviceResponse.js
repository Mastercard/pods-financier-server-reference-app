/**
 * Pay On Demand for Digital Inclusion
 * Please visit https://developer.mastercard.com for additional details. ## Usage Notes - In the endpoints, you will see parameter examples in {{parameter}} format. You need to replace that with the actual value. This is usually applicable for identifier (ID). For example, on GET /contracts, you need to replace \"financier_id\" parameter with actual financier ID value. You can get this value either from querying using GET /financiers or creating a new financier using POST /financiers. The same applies for properties inside request body. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: PayonDemand_DigitalInclusion@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PodApiClient) {
      root.PodApiClient = {};
    }
    root.PodApiClient.DeviceResponse = factory(root.PodApiClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The DeviceResponse model module.
   * @module model/DeviceResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>DeviceResponse</code>.
   * @alias module:model/DeviceResponse
   * @class
   * @param deviceId {String} Device ID
   * @param financierId {String} 
   * @param imeiNumber {String} International Mobile Equipment Identity Number
   * @param serialNumber {String} Serial number as provided by the OEM
   * @param oem {String} Origional Equipement Manufacturer of the device
   * @param status {String} Status of the device
   */
  var exports = function(deviceId, financierId, imeiNumber, serialNumber, oem, status) {
    var _this = this;

    _this['deviceId'] = deviceId;
    _this['financierId'] = financierId;
    _this['imeiNumber'] = imeiNumber;
    _this['serialNumber'] = serialNumber;
    _this['oem'] = oem;
    _this['status'] = status;
  };

  /**
   * Constructs a <code>DeviceResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceResponse} obj Optional instance to populate.
   * @return {module:model/DeviceResponse} The populated <code>DeviceResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('deviceId')) {
        obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
      }
      if (data.hasOwnProperty('financierId')) {
        obj['financierId'] = ApiClient.convertToType(data['financierId'], 'String');
      }
      if (data.hasOwnProperty('imeiNumber')) {
        obj['imeiNumber'] = ApiClient.convertToType(data['imeiNumber'], 'String');
      }
      if (data.hasOwnProperty('serialNumber')) {
        obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
      }
      if (data.hasOwnProperty('oem')) {
        obj['oem'] = ApiClient.convertToType(data['oem'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
    }
    return obj;
  }

  /**
   * Device ID
   * @member {String} deviceId
   */
  exports.prototype['deviceId'] = undefined;
  /**
   * @member {String} financierId
   */
  exports.prototype['financierId'] = undefined;
  /**
   * International Mobile Equipment Identity Number
   * @member {String} imeiNumber
   */
  exports.prototype['imeiNumber'] = undefined;
  /**
   * Serial number as provided by the OEM
   * @member {String} serialNumber
   */
  exports.prototype['serialNumber'] = undefined;
  /**
   * Origional Equipement Manufacturer of the device
   * @member {String} oem
   */
  exports.prototype['oem'] = undefined;
  /**
   * Status of the device
   * @member {String} status
   */
  exports.prototype['status'] = undefined;



  return exports;
}));


