/**
 * Pay On Demand for Digital Inclusion
 * Please visit https://developer.mastercard.com for additional details. ## Usage Notes - In the endpoints, you will see parameter examples in {{parameter}} format. You need to replace that with the actual value. This is usually applicable for identifier (ID). For example, on GET /contracts, you need to replace \"financier_id\" parameter with actual financier ID value. You can get this value either from querying using GET /financiers or creating a new financier using POST /financiers. The same applies for properties inside request body. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: PayonDemand_DigitalInclusion@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LineItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LineItem'));
  } else {
    // Browser globals (root is window)
    if (!root.PodApiClient) {
      root.PodApiClient = {};
    }
    root.PodApiClient.PaymentSessionRequest = factory(root.PodApiClient.ApiClient, root.PodApiClient.LineItem);
  }
}(this, function(ApiClient, LineItem) {
  'use strict';



  /**
   * The PaymentSessionRequest model module.
   * @module model/PaymentSessionRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>PaymentSessionRequest</code>.
   * @alias module:model/PaymentSessionRequest
   * @class
   * @param financierId {String} Financier ID that owns this payment session.
   * @param contractId {String} Contract ID that the payment session is tied with.
   * @param deviceId {String} Device ID that makes this transaction for.
   * @param scope {String} Payment session scope. - DEFAULT; only value currently supported. 
   * @param totalAmount {String} Total payment amount. Formatted according to ISO 4217 standard.
   * @param expiryDate {String} Date time with off set value. Maximum 15 minutes cab be added to the current date time.
   * @param callBackUrl {String} Call back url that is used to call back the financier system
   * @param lineItems {Array.<module:model/LineItem>} 
   */
  var exports = function(financierId, contractId, deviceId, scope, totalAmount, expiryDate, callBackUrl, lineItems) {
    var _this = this;

    _this['financierId'] = financierId;
    _this['contractId'] = contractId;
    _this['deviceId'] = deviceId;
    _this['scope'] = scope;
    _this['totalAmount'] = totalAmount;
    _this['expiryDate'] = expiryDate;
    _this['callBackUrl'] = callBackUrl;
    _this['lineItems'] = lineItems;
  };

  /**
   * Constructs a <code>PaymentSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentSessionRequest} obj Optional instance to populate.
   * @return {module:model/PaymentSessionRequest} The populated <code>PaymentSessionRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('financierId')) {
        obj['financierId'] = ApiClient.convertToType(data['financierId'], 'String');
      }
      if (data.hasOwnProperty('contractId')) {
        obj['contractId'] = ApiClient.convertToType(data['contractId'], 'String');
      }
      if (data.hasOwnProperty('deviceId')) {
        obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'String');
      }
      if (data.hasOwnProperty('scope')) {
        obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
      }
      if (data.hasOwnProperty('totalAmount')) {
        obj['totalAmount'] = ApiClient.convertToType(data['totalAmount'], 'String');
      }
      if (data.hasOwnProperty('expiryDate')) {
        obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'String');
      }
      if (data.hasOwnProperty('callBackUrl')) {
        obj['callBackUrl'] = ApiClient.convertToType(data['callBackUrl'], 'String');
      }
      if (data.hasOwnProperty('lineItems')) {
        obj['lineItems'] = ApiClient.convertToType(data['lineItems'], [LineItem]);
      }
    }
    return obj;
  }

  /**
   * Financier ID that owns this payment session.
   * @member {String} financierId
   */
  exports.prototype['financierId'] = undefined;
  /**
   * Contract ID that the payment session is tied with.
   * @member {String} contractId
   */
  exports.prototype['contractId'] = undefined;
  /**
   * Device ID that makes this transaction for.
   * @member {String} deviceId
   */
  exports.prototype['deviceId'] = undefined;
  /**
   * Payment session scope. - DEFAULT; only value currently supported. 
   * @member {String} scope
   */
  exports.prototype['scope'] = undefined;
  /**
   * Total payment amount. Formatted according to ISO 4217 standard.
   * @member {String} totalAmount
   */
  exports.prototype['totalAmount'] = undefined;
  /**
   * Date time with off set value. Maximum 15 minutes cab be added to the current date time.
   * @member {String} expiryDate
   */
  exports.prototype['expiryDate'] = undefined;
  /**
   * Call back url that is used to call back the financier system
   * @member {String} callBackUrl
   */
  exports.prototype['callBackUrl'] = undefined;
  /**
   * @member {Array.<module:model/LineItem>} lineItems
   */
  exports.prototype['lineItems'] = undefined;



  return exports;
}));


